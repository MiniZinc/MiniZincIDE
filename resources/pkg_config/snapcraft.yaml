name: minizinc
version: git
summary: The MiniZinc bundle
icon: resources/icon.png
description: |
  MiniZinc is a free and open-source constraint modeling language. You can
  use MiniZinc to model constraint satisfaction and optimization problems in
  a high-level, solver-independent way, taking advantage of a large library
  of pre-defined constraints. Your model is then compiled into FlatZinc, a
  solver input language that is understood by a wide range of solvers.

confinement: classic
base: core18

apps:
  minizinc:
    command: bin/minizinc
  ide:
    command: bin/desktop-launch ${SNAP}/bin/MiniZincIDE
    desktop: share/applications/MiniZincIDE.desktop
    environment:
      # Use GTK3 cursor theme, icon theme and open/save file dialogs.
      QT_QPA_PLATFORMTHEME: gtk3

parts:
  ide:
    plugin: qmake
    source: .
    source-subdir: MiniZincIDE
    qt-version: qt5
    after: [desktop-qt5]
    build-packages:
      - qtwebengine5-dev
    stage-packages:
      - libqt5webengine5
      - libqt5sql5-sqlite
      - libqt5printsupport5
  minizinc:
    plugin: dump
    source: minizinc/
    stage: [bin/, share/]
  vendor:
    plugin: dump
    source: vendor/
    organize:
      gecode/bin/fzn-gecode: bin/
      gecode_gist/bin/fzn-gecode: bin/fzn-gecode-gist
      gecode/share/gecode/mznlib: share/minizinc/gecode
      chuffed/bin/fzn-chuffed: bin/
      chuffed/share/minizinc/*: share/minizinc/
    stage: [bin/, share/minizinc/]
  globalizer:
    plugin: dump
    source: globalizer/
    organize:
      share/globalizer/mznlib: share/minizinc/globalizer
    stage: [bin/, share/minizinc/]
  findmus:
    plugin: dump
    source: findMUS/
    stage: [bin/]
  resources:
    plugin: dump
    source: resources/
    organize:
      scripts/run-fzn-gecode-gist: bin/
      solvers/*.msc: share/minizinc/solvers/
      misc/MiniZincIDE.desktop: share/applications/
    stage: [bin/, share/]
  # This part installs the qt5 dependencies and a `desktop-launch` script to initialise
  # desktop-specific features such as fonts, themes and the XDG environment.
  # 
  # It is copied straight from the snapcraft desktop helpers project. Please periodically
  # check the source for updates and copy the changes.
  #    https://github.com/ubuntu/snapcraft-desktop-helpers/blob/master/snapcraft.yaml
  # 
  desktop-qt5:
    source: https://github.com/ubuntu/snapcraft-desktop-helpers.git
    source-subdir: qt
    plugin: make
    make-parameters: ["FLAVOR=qt5"]
    build-packages:
      - build-essential
      - qtbase5-dev
      - dpkg-dev
    stage-packages:
      - libxkbcommon0
      - ttf-ubuntu-font-family
      - dmz-cursor-theme
      - light-themes
      - adwaita-icon-theme
      - gnome-themes-standard
      - shared-mime-info
      - libqt5gui5
      - libgdk-pixbuf2.0-0
      - libqt5svg5 # for loading icon themes which are svg
      - try: [appmenu-qt5] # not available on core18
      - locales-all
      - xdg-user-dirs
      - fcitx-frontend-qt5
  # Add GTK theme integration
  qt5-gtk-platform:
    plugin: nil
    stage-packages:
      - qt5-gtk-platformtheme
